#ifndef MAINWINDOW_H
#define MAINWINDOW_H
#include <QtSerialPort/QSerialPortInfo>
#include "qextserial/qextserialport.h"
#include "addwidgettab.h"
#include "customplottab.h"
#include <windows.h>
#include <QMainWindow>
#include <QTimer>
#include <QString>
#include <QDebug>
#include <QIODevice>
#include <QHeaderView>
#include "qtxml.h"


//串口读写的延时
#define TIMEOUT    30
#define AB         0.4
#define OB         0.2

//帧头帧尾
#define LINMSGHEAD   0x68
#define LINMSGTAIL   0x16
#define LINMSG00     0x00
#define LINMSG01     0x01
#define LINMSG02     0x02
#define LINMSG03     0x03
#define LINMSG04     0x04
#define LINMSG05     0x05
#define LINMSG06     0x06
#define LINMSG07     0x07
#define LINMSG08     0x08
#define LINMSG09     0x09
#define LINMSG0C     0x0C
#define LINMSG0D     0x0D
#define LINMSG0E     0x0E
#define LINMSG10     0x10
#define LINMSG11     0x11
#define LINMSG18     0x18
#define LINMSG1A     0x1A
#define LINMSG1C     0x1C
#define LINMSG1D     0x1D
#define LINMSG30     0x30
#define LINMSG38     0x38
#define LINMSG3A     0x3A
#define LINMSG3C     0x3C
#define LINMSG3F     0x3F
#define LINMSG41     0x41
#define LINMSG42     0x42
#define LINMSG52     0x52
#define LINMSG53     0x53
#define LINMSG55     0x55
#define LINMSG6C     0x6C
#define LINMSG7F     0x7F
#define LINMSG90     0x90
#define LINMSGB5     0xB5
#define LINMSGC0     0xC0
#define LINMSGD6     0xD6
#define LINMSGE0     0xE0
#define LINMSGFC     0xFC
#define LINMSGFF     0xFF
#define LINMSG0F     0x0F

//字符串
#define STRINGZERO   QString("0")
#define STRINGONE    QString("1")
#define STRINGTWO    QString("2")
#define STRINGSEVEN  QString("7")
#define STRINGEIGHT  QString("8")
#define STRING9600   QString("9600")
#define STRING115200 QString("115200")
#define STRING57600  QString("57600")
#define LINONEX      QString("Lin1.x")
#define LINTWOX      QString("Lin2.x")
#define AUTO         QString("Auto")
#define KLIN         QString("K-Line")
#define NOCHECK      QString("无")
#define ODDCHECK     QString("奇")
#define EVENCHECK    QString("偶")


class MainThread;
typedef struct DataXY
{
    QString xData;
    QString yData;
    float ASData;
    float BSData;
}DataXY;

const DataXY dataABSec[]=
{
    { "0.300",   "0.250",     0.442,    0.353 },
    { "0.400",   "0.250",     0.365,    0.331 },
    { "0.500",   "0.250",     0.309 ,   0.353 },
    { "0.600",   "0.250",     0.298,    0.398 },
    { "0.700",   "0.250",     0.309 ,   0.442 },
    { "0.800",   "0.250",     0.353 ,   0.508 },
    { "0.900",   "0.250" ,    0.420 ,   0.596 },
    { "1.000" ,  "0.350" ,    0.577 ,   0.892 },
    { "0.900" ,  "0.350" ,    0.506 ,   0.794 },
    { "0.800" ,  "0.350" ,    0.471 ,   0.686 },
    { "0.700" ,  "0.350" ,    0.429 ,   0.620 },
    { "0.600" ,  "0.350" ,    0.420 ,   0.544 },
    { "0.500" ,  "0.350" ,    0.428 ,   0.446 },
    { "0.400" ,  "0.350" ,    0.456 ,   0.392 },
    { "0.300" ,  "0.350" ,    0.527 ,   0.359 },
    { "0.300" ,  "0.450" ,    0.607 ,   0.457 },
    { "0.400" ,  "0.450" ,    0.556 ,   0.49  },
    { "0.500" ,  "0.450" ,    0.539 ,   0.554 },
    { "0.600" ,  "0.450" ,    0.529 ,   0.587 },
    { "0.700" ,  "0.450" ,    0.540 ,   0.663 },
    { "0.800" ,  "0.450" ,    0.558 ,   0.751 },
    { "0.900" ,  "0.450" ,    0.598 ,   0.838 },
    { "1.000" ,  "0.450" ,    0.656 ,   0.947 },
    { "1.100",   "0.450",     0.685,    1.012 },
    { "1.100",   "0.550",     0.762,    1.066 },
    { "1.000" ,  "0.550" ,    0.735 ,   1.001 },
    { "0.900" ,  "0.550" ,    0.686 ,   0.903 },
    { "0.700" ,  "0.550" ,    0.638 ,   0.739 },
    { "0.600" ,  "0.550" ,    0.638 ,   0.674 },
    { "0.500" ,  "0.550" ,    0.637 ,   0.631 },
    { "0.400" ,  "0.550" ,    0.656 ,   0.588 },
    { "0.300" ,  "0.550" ,    0.684 ,   0.533 },
    { "0.300" ,  "0.650" ,    0.784 ,   0.653 },
    { "0.400" ,  "0.650" ,    0.743 ,   0.675 },
    { "0.500" ,  "0.650" ,    0.713 ,   0.707 },
    { "0.600" ,  "0.650" ,    0.703 ,   0.761 },
    { "0.700" ,  "0.650" ,    0.714 ,   0.816 },
    { "0.800" ,  "0.650" ,    0.733 ,   0.882 },
    { "0.900" ,  "0.650" ,    0.765 ,   0.936 },
    { "1.000" ,  "0.650" ,    0.806 ,   1.022 },
    { "1.100",   "0.650",     0.838,    1.120 },
    { "1.100",   "0.750",     0.925,    1.164 },
    { "1.000" ,  "0.750" ,    0.883 ,   1.077 },
    { "0.900" ,  "0.750" ,    0.852 ,   1.023 },
    { "0.800" ,  "0.750" ,    0.832 ,   0.958 },
    { "0.700" ,  "0.750" ,    0.812 ,   0.892 },
    { "0.600" ,  "0.750" ,    0.801 ,   0.837 },
    { "0.500" ,  "0.750" ,    0.811 ,   0.783 },
    { "0.400" ,  "0.750" ,    0.831 ,   0.762 },
    { "0.300" ,  "0.750" ,    0.861 ,   0.729 },
    { "0.300" ,  "0.850" ,    0.938 ,   0.827 },
    { "0.400" ,  "0.850" ,    0.908 ,   0.837 },
    { "0.500" ,  "0.850" ,    0.898 ,   0.870 },
    { "0.600" ,  "0.850" ,    0.910 ,   0.924 },
    { "0.700" ,  "0.850" ,    0.920 ,   0.980 },
    { "0.800" ,  "0.850" ,    0.941 ,   1.045 },
    { "0.900" ,  "0.850" ,    0.973 ,   1.099 },
    { "1.000" ,  "0.850" ,    1.003 ,   1.175 },
    { "1.100",   "0.850",     1.001,    1.219 },
    { "1.100",   "0.950",     1.088,    1.306 },
    { "1.000" ,  "0.950" ,    1.092 ,   1.219 },
    { "0.900" ,  "0.950" ,    1.050 ,   1.153 },
    { "0.800" ,  "0.950" ,    1.028 ,   1.110 },
    { "0.700" ,  "0.950" ,    1.018 ,   1.077 },
    { "0.600" ,  "0.950" ,    1.018 ,   1.012 },
    { "0.500" ,  "0.950" ,    1.017 ,   0.990 },
    { "0.400" ,  "0.950" ,    1.027 ,   0.958 },
    { "0.300" ,  "0.950" ,    1.048 ,   0.936 },
    { "0.300" ,  "1.000" ,    1.082 ,   0.99 },
    { "0.400" ,  "1.000" ,    1.050 ,   1.001 },
    { "0.500" ,  "1.000" ,    1.051 ,   1.023 },
    { "0.600" ,  "1.000" ,    1.073 ,   1.088 },
    { "0.700" ,  "1.000" ,    1.062 ,   1.120 },
    { "0.800" ,  "1.000" ,    1.083 ,   1.164 },
    { "0.900" ,  "1.000" ,    1.104 ,   1.208 },
    { "1.000" ,  "1.000" ,    1.135 ,   1.284 },
    { "1.100" ,  "1.000" ,    1.178 ,   1.349 },
    { "1.100" ,  "1.100" ,    1.253 ,   1.425 },
    { "1.000" ,  "1.100" ,    1.211 ,   1.360 },
    { "0.900" ,  "1.100" ,    1.181 ,   1.283 },
    { "0.800" ,  "1.100" ,    1.159 ,   1.240 },
    { "0.700" ,  "1.100" ,    1.149 ,   1.186 },
    { "0.600" ,  "1.100" ,    1.149 ,   1.164 },
    { "0.500" ,  "1.100" ,    1.149 ,   1.121 },
    { "0.400" ,  "1.100" ,    1.148 ,   1.099 },
    { "0.300" ,  "1.100" ,    1.180 ,   1.088 },
    { "0.300" ,  "1.200" ,    1.277 ,   1.186 },
    { "0.400" ,  "1.200" ,    1.257 ,   1.197 },
    { "0.500" ,  "1.200" ,    1.247 ,   1.218 },
    { "0.600" ,  "1.200" ,    1.247 ,   1.240 },
    { "0.700" ,  "1.200" ,    1.247 ,   1.284 },
    { "0.800" ,  "1.200" ,    1.257 ,   1.338 },
    { "0.900" ,  "1.200" ,    1.278 ,   1.382 },
    { "1.000" ,  "1.200" ,    1.298 ,   1.447 },
    { "1.100" ,  "1.200" ,    1.331 ,   1.480 },
    { "1.100" ,  "1.300" ,    1.428 ,   1.577 },
    { "1.000" ,  "1.300" ,    1.408 ,   1.534 },
    { "0.900" ,  "1.300" ,    1.376 ,   1.469 },
    { "0.800" ,  "1.300" ,    1.356 ,   1.414 },
    { "0.700" ,  "1.300" ,    1.334 ,   1.371 },
    { "0.600" ,  "1.300" ,    1.345 ,   1.338 },
    { "0.500" ,  "1.300" ,    1.345 ,   1.316 },
    { "0.400" ,  "1.300" ,    1.355 ,   1.305 },
    { "0.300" ,  "1.300" ,    1.375 ,   1.284 },
    { "0.300" ,  "1.400" ,    1.474 ,   1.382 },
    { "0.400" ,  "1.400" ,    1.463 ,   1.393 },
    { "0.500" ,  "1.400" ,    1.454 ,   1.425 },
    { "0.600" ,  "1.400" ,    1.443 ,   1.436 },
    { "0.700" ,  "1.400" ,    1.443 ,   1.458 },
    { "0.800" ,  "1.400" ,    1.454 ,   1.512 },
    { "0.900" ,  "1.400" ,    1.474 ,   1.556 },
    { "1.000" ,  "1.400" ,    1.495 ,   1.599 },
    { "1.100" ,  "1.400" ,    1.515 ,   1.664 },
    { "1.100" ,  "1.500" ,    1.603 ,   1.730 },
    { "1.000" ,  "1.500" ,    1.582 ,   1.686 },
    { "0.900" ,  "1.500" ,    1.561 ,   1.643 },
    { "0.800" ,  "1.500" ,    1.540 ,   1.599 },
    { "0.700" ,  "1.500" ,    1.541 ,   1.577 },
    { "0.600" ,  "1.500" ,    1.541 ,   1.534 },
    { "0.500" ,  "1.500" ,    1.541 ,   1.512 },
    { "0.400" ,  "1.500" ,    1.551 ,   1.502 },
    { "0.300" ,  "1.500" ,    1.572 ,   1.502 },
    { "0.300" ,  "1.600" ,    1.670 ,   1.599 },
    { "0.400" ,  "1.600" ,    1.649 ,   1.600 },
    { "0.500" ,  "1.600" ,    1.649 ,   1.611 },
    { "0.600" ,  "1.600" ,    1.638 ,   1.632 },
    { "0.700" ,  "1.600" ,    1.660 ,   1.676 },
    { "0.800" ,  "1.600" ,    1.649 ,   1.687 },
    { "0.900" ,  "1.600" ,    1.670 ,   1.752 },
    { "1.000" ,  "1.600" ,    1.680 ,   1.784 },
    { "1.100" ,  "1.600" ,    1.702 ,   1.817 },
    { "0.300" ,  "1.700" ,    1.746 ,   1.676 },
    { "0.400" ,  "1.700" ,    1.736 ,   1.687 },
    { "0.500" ,  "1.700" ,    1.726 ,   1.697 },
    { "0.600" ,  "1.700" ,    1.726 ,   1.719 },
    { "0.700" ,  "1.700" ,    1.736 ,   1.752 },
    { "0.800" ,  "1.700" ,    1.736 ,   1.774 },
    { "0.900" ,  "1.700" ,    1.746 ,   1.806 },
    { "1.000" ,  "1.700" ,    1.768 ,   1.850 },
    { "1.100" ,  "1.700" ,    1.789 ,   1.893 },
    { "1.100" ,  "1.800" ,    1.887 ,   1.991 },
    { "1.000" ,  "1.800" ,    1.866 ,   1.947 },
    { "0.900" ,  "1.800" ,    1.855 ,   1.915 },
    { "0.800" ,  "1.800" ,    1.845 ,   1.882 },
    { "0.700" ,  "1.800" ,    1.834 ,   1.850 },
    { "0.600" ,  "1.800" ,    1.834 ,   1.828 },
    { "0.500" ,  "1.800" ,    1.845 ,   1.817 },
    { "0.400" ,  "1.800" ,    1.856 ,   1.806 },
    { "0.300" ,  "1.800" ,    1.866 ,   1.773 },
    { "0.300" ,  "1.900" ,    1.953 ,   1.882 },
    { "0.400" ,  "1.900" ,    1.943 ,   1.882 },
    { "0.500" ,  "1.900" ,    1.932 ,   1.882 },
    { "0.600" ,  "1.900" ,    1.943 ,   1.915 },
    { "0.700" ,  "1.900" ,    1.954 ,   1.948 },
    { "0.800" ,  "1.900" ,    1.965 ,   1.991 },
    { "0.900" ,  "1.900" ,    1.975 ,   2.034 },
    { "1.000" ,  "1.900" ,    1.997 ,   2.056 },
    { "1.100" ,  "1.900" ,    2.006 ,   2.111 },
    { "1.100" ,  "2.000" ,    2.094 ,   2.155 },
    { "1.000" ,  "2.000" ,    2.062 ,   2.121 },
    { "0.900" ,  "2.000" ,    2.062 ,   2.121 },
    { "0.800" ,  "2.000" ,    2.052 ,   2.067 },
    { "0.700" ,  "2.000" ,    2.041 ,   2.056 },
    { "0.500" ,  "2.000" ,    2.041 ,   2.013 },
    { "0.400" ,  "2.000" ,    2.041 ,   1.991 },
    { "0.300" ,  "2.000" ,    2.062 ,   1.980 },
    { "0.300" ,  "2.100" ,    2.149 ,   2.078 },
    { "0.400" ,  "2.100" ,    2.128 ,   2.078 },
    { "0.500" ,  "2.100" ,    2.117 ,   2.089 },
    { "0.600" ,  "2.100" ,    2.117 ,   2.111 },
    { "0.700" ,  "2.100" ,    2.095 ,   2.111 },
    { "0.800" ,  "2.100" ,    2.117 ,   2.133 },
    { "0.900" ,  "2.100" ,    2.117 ,   2.154 },
    { "1.000" ,  "2.100" ,    2.138 ,   2.198 },
    { "1.100" ,  "2.100" ,    2.149 ,   2.230 },
    { "1.100" ,  "2.200" ,    2.247 ,   2.328 },
    { "1.000" ,  "2.200" ,    2.225 ,   2.285 },
    { "0.900" ,  "2.200" ,    2.226 ,   2.263 },
    { "0.800" ,  "2.200" ,    2.204 ,   2.242 },
    { "0.700" ,  "2.200" ,    2.204 ,   2.198 },
    { "0.600" ,  "2.200" ,    2.204 ,   2.198 },
    { "0.500" ,  "2.200" ,    2.204 ,   2.176 },
    { "0.400" ,  "2.200" ,    2.215 ,   2.165 },
    { "0.300 " , "2.200" ,    2.236 ,   2.165 },
    { "0.300 " , "2.300" ,    2.313 ,   2.263 },
    { "0.400" ,  "2.300" ,    2.302 ,   2.252 },
    { "0.500" ,  "2.300" ,    2.302 ,   2.274 },
    { "0.600" ,  "2.300" ,    2.291 ,   2.285 },
    { "0.700" ,  "2.300" ,    2.302 ,   2.307 },
    { "0.800" ,  "2.300" ,    2.302 ,   2.339 },
    { "0.900" ,  "2.300" ,    2.313 ,   2.350 },
    { "1.000" ,  "2.300" ,    2.334 ,   2.393 },
    { "1.100" ,  "2.300" ,    2.344 ,   2.426 },
    { "1.100" ,  "2.400" ,    2.453 ,   2.524 },
    { "1.000" ,  "2.400" ,    2.432 ,   2.491 },
    { "0.900" ,  "2.400" ,    2.422 ,   2.459 },
    { "0.800" ,  "2.400" ,    2.411 ,   2.448 },
    { "0.700" ,  "2.400" ,    2.411 ,   2.404 },
    { "0.600" ,  "2.400" ,    2.411 ,   2.404 },
    { "0.500" ,  "2.400" ,    2.422 ,   2.393 },
    { "0.400" ,  "2.400" ,    2.433 ,   2.382 },
    { "0.300" ,  "2.400" ,    2.444 ,   2.371 },
    { "0.300" ,  "2.500" ,    2.531 ,   2.459 },
    { "0.400" ,  "2.500" ,    2.520 ,   2.459 },
    { "0.500" ,  "2.500" ,    2.509 ,   2.481 },
    { "0.600" ,  "2.500" ,    2.509 ,   2.502 },
    { "0.700" ,  "2.500" ,    2.498 ,   2.502 },
    { "0.800" ,  "2.500" ,    2.520 ,   2.535 },
    { "0.900" ,  "2.500" ,    2.520 ,   2.557 },
    { "1.000" ,  "2.500" ,    2.530 ,   2.589 },


    /*********************盲区数据*****************/
    { "0.500" ,  "0.250"  ,	  0.409,	0.387 },
    { "0.600" ,  "0.250"  ,	  0.365,	0.475 },
    { "0.700" ,  "0.250"  ,	  0.365,    0.585 },
    { "0.800" ,  "0.250"  ,	  0.376,	0.662 },
    { "0.900" ,  "0.250"  ,	  0.442,	0.774 },
    { "1.000" ,  "0.250"  ,	  0.508,	0.862 },
    { "1.100" ,  "0.250"  ,	  0.585,	0.961 },
    { "0.500" ,  "0.200"  ,	  0.387,	0.343 },
    { "0.600" ,  "0.200"  ,	  0.320,    0.432 },
    { "0.700" ,  "0.200"  ,	  0.309,	0.553 },
    { "0.800" ,  "0.200"  ,	  0.331,	0.641 },
    { "0.900" ,  "0.200"  ,	  0.398,	0.750 },
    { "1.000" ,  "0.200"  ,	  0.464,	0.862 },
    { "1.100" ,  "0.200"  ,	  0.552,	0.950 },
    { "0.500" ,  "0.150"  ,	  0.320,    0.342 },
    { "0.600" ,  "0.150"  ,	  0.276,	0.408 },
    { "0.700" ,  "0.150"  ,	  0.276,	0.520 },
    { "0.800" ,  "0.150"  ,	  0.309,	0.597 },
    { "0.900" ,  "0.150"  ,	  0.353,	0.729 },
    { "1.000" ,  "0.150"  ,	  0.431,	0.829 },
    { "1.100" ,  "0.150"  ,	  0.519,	0.961 }
};

const DataXY dataBCSec[]=
{
    {"0.000",     "2.500",       2.459,     2.481},
    {"0.100",     "2.500",       2.459,     2.502},
    {"0.200",     "2.500",       2.459,     2.546},
    {"0.000",     "2.400",       2.383,     2.404},
    {"0.100",     "2.400",       2.383,     2.426},
    {"0.200",     "2.400",       2.372,     2.459},
    {"0.000",     "2.300",       2.285,     2.306},
    {"0.100",     "2.300",       2.274,     2.339},
    {"0.200",     "2.300",       2.274,     2.361},
    {"0.000",     "2.200",       2.187,     2.209},
    {"0.100",     "2.200",       2.187,     2.230},
    {"0.200",     "2.200",       2.176,     2.241},
    {"0.000",     "2.100",       2.089,     2.132},
    {"0.100",     "2.100",       2.078,     2.143},
    {"0.200",     "2.100",       2.078,     2.143},
    {"0.000",     "2.000",       2.002,     2.024},
    {"0.100",     "2.000",       1.980,     2.067},
    {"0.200",     "2.000",       1.969,     2.035},
    {"0.000",     "1.900",       1.893,     1.915},
    {"0.100",     "1.900",       1.882,     1.948},
    {"0.200",     "1.900",       1.871,     1.959},
    {"0.000",     "1.800",       1.784,     1.828},
    {"0.100",     "1.800",       1.773,     1.817},
    {"0.200",     "1.800",       1.763,     1.849},
    {"0.000",     "1.700",       1.676,     1.719},
    {"0.100",     "1.700",       1.665,     1.730},
    {"0.200",     "1.700",       1.654,     1.741},
    {"0.000",     "1.600",       1.578,     1.599},
    {"0.100",     "1.600",       1.556,     1.599},
    {"0.200",     "1.600",       1.556,     1.643},
    {"0.000",     "1.500",       1.469,     1.490},
    {"0.100",     "1.500",       1.447,     1.512},
    {"0.200",     "1.500",       1.447,     1.534},
    {"0.000",     "1.400",       1.371,     1.393},
    {"0.100",     "1.400",       1.371,     1.436},
    {"0.200",     "1.400",       1.371,     1.458},
    {"0.000",     "1.300",       1.306,     1.327},
    {"0.100",     "1.300",       1.284,     1.349},
    {"0.200",     "1.300",       1.284,     1.371},
    {"0.000",     "1.200",       1.208,     1.229},
    {"0.100",     "1.200",       1.186,     1.251},
    {"0.200",     "1.200",       1.186,     1.273},
    {"0.000",     "1.100",       1.077,     1.121},
    {"0.100",     "1.100",       1.055,     1.143},
    {"0.300",     "1.100",       1.055,     1.165},
    {"0.000",     "1.000",       0.979,     1.001},
    {"0.100",     "1.000",       0.957,     1.023},
    {"0.200",     "1.000",       0.957,     1.067},
    {"0.000",     "0.950",       0.925,     0.946},
    {"0.100",     "0.950",       0.914,     0.979},
    {"0.200",     "0.950",       0.903,     1.012},
    {"0.000",     "0.850",       0.827,     0.849},
    {"0.100",     "0.850",       0.816,     0.881},
    {"0.200",     "0.850",       0.816,     0.925},
    {"0.000",     "0.750",       0.751,     0.772},
    {"0.100",     "0.750",       0.729,     0.794},
    {"0.200",     "0.750",       0.729,     0.838},
    {"0.000",     "0.650",       0.664,     0.663},
    {"0.100",     "0.650",       0.631,     0.718},
    {"0.200",     "0.650",       0.631,     0.762},
    {"0.000",     "0.550",       0.577,     0.598},
    {"0.100",     "0.550",       0.555,     0.642},
    {"0.200",     "0.550",       0.555,     0.685},
    {"0.000",     "0.450",       0.479,     0.522},
    {"0.100",     "0.450",       0.446,     0.577},
    {"0.200",     "0.450",       0.446,     0.620},
    {"0.000",     "0.350",       0.370,     0.413},
    {"0.100",     "0.350",       0.337,     0.468},
    {"0.200",     "0.350",       0.326,     0.544},


    /*********************盲区数据*****************/
    {"0.200",     "0.250",       0.276,     0.520},
    {"0.100",     "0.250",       0.309,     0.443},
    {"0.000",     "0.250",       0.376,     0.376},
    {"0.200",     "0.200",       0.232,     0.498},
    {"0.100",     "0.200",       0.287,     0.416},
    {"0.000",     "0.200",       0.326,     0.349},
    {"0.200",     "0.150",       0.342,     0.320},
    {"0.100",     "0.150",       0.243,     0.397},
    {"0.000",     "0.150",       0.320,     0.298}
};


namespace Ui {
class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit MainWindow(QWidget *parent=0);
    ~MainWindow();
    enum Frame
    {
        Conn,      //握手连接
        Baud,      //波特率
        Channel,   //通道
        Imp,       //主从模式
        Length,    //长度
        Load1C,    //加载1C
        Load3C,    //加载3C
        Load,      //加载数据
        Send,      //发送帧头
        FlxLen,    //设置长度
        Deal       //协议
    };
private slots:


    /**********************打开串口***********************/
    void on_pushButtonOpen_clicked();


    /**********************开始发送***********************/
    void on_pushButtonStart_clicked();


    /**********************定时器函数*********************/
    void timeUpdate();


    /**********************握手连接***********************/
    void on_pushButtonConn_clicked();


    /**********************更改通道***********************/
    void on_comboBoxGallery_activated(const QString &arg1);


    /**********************更改波特率*********************/
    void on_comboBoxBaud_2_activated(const QString &arg1);


    /**********************更改主从***********************/
    void on_checkBoxImp_clicked();


    /**********************更改协议***********************/
    void on_comboBoxDeal_activated(const QString &arg1);


    /**********************更改协议***********************/
    void on_checkBoxLength_clicked();



    /**********************选中**************************/
    void on_checkBoxCheck_clicked();


    /**********************读取探头信息******************/
    void readInfoMessage();

    /**********************自动分配地址******************/
    void on_pushButtonAddress_clicked();

    /**********************清空信息******************/
    void on_pushButtonClear_clicked();

    /**********************读取数据******************/
    void on_pushButtonRead_clicked();

    /**********************选择分配ID数目*************/
    void on_comboBoxNumber_activated(int index);

private:
    Ui::MainWindow *ui;
    addWidgetTab*widgetTab;              //添加控件
    customPlotTab*plotTab;               //画波形
    QextSerialPort *myCom;               //声明串口对象
    QLineEdit   *lineEditCount[8];       //发送次数
    QWidget     *widgetMessage[8];       //指令
    QCheckBox   *checkBoxMessage[8];     //指令
    QHBoxLayout *hboxLayoutMessage[8];   //居中控件
    QLineEdit   *lineEditMessage[8];     //指令
    QLineEdit   *lineEditNumber[8];      //ID序号
    QWidget     *widgetSMessage[8];      //指令
    QCheckBox   *checkBoxSMessage[8];    //指令
    QHBoxLayout *hboxLayoutSMessage[8];  //居中控件
    QLineEdit   *lineEditSMessage[8];    //指令
    QLineEdit   *lineEditSNumber[8];     //ID序号
    QTimer *timer;                       //定时器
    QTimer *sendTimer;                   //定时器
    bool handShake;                      //握手连接
    bool ok;                             //打开串口标志位
    bool sendFlage;                      //发送标志位
    BYTE TYID;                           //探头标志位
    QList<BYTE>listModel;                //判断出探头的收发模式
    QList<int>dataI;                     //存储数组下标
    QByteArray tempDataOne;              //存储0X01
    QByteArray tempDataTwo;              //存储0X02
    QByteArray tempDataThree;            //存储0X03
    QByteArray tempDataFour;             //存储0X04
    QByteArray tempDataFive;             //存储0X05
    QByteArray tempDataSix;              //存储0X06
    QByteArray tempDataSeven;            //存储0X07
    QByteArray tempDataEight;            //存储0X08
    QtXml      *xmlData;                 //读取XML信息
    XmlThread  *xmlThread;               //线程
    MainThread*mainThread;               //发送帧头
    CustomPlotThread*plotThread;         //显示曲线线程
    float dataTarget[6];                 //多目标数据
    float aRingTime;                     //五号探头余震
    float bRingTime;                     //五号探头余震
    float aDistance;                     //a波程
    float bDistance;                     //b波程
    float cDistance;                     //c波程

    /**********************连接串口***********************/
    void connCom();


    /**********************读取数据***********************/
    void readCom();


    /**********************去除空格***********************/
    void deBlank(QString &str);


    /**********************窗口关闭***********************/
    void closeEvent(QCloseEvent*event);


    /*************************保存信息函数******************/
    void saveConfig();

    /**************************读取探头数据*****************/
    inline void readMessage(QByteArray temp);

    /**************************握手数据********************/
    inline void readConn(QByteArray temp);


    /**************************得到XY坐标******************/
    inline void getXY();

    /**************************取最小值************/
    inline int minGet(BYTE flage);


public:
    /**********************发送帧头***********************/
    void sendFrameHead();


    /**********************设置命令**********************/
    inline void setupFrame(Frame Model, BYTE ID, BYTE Par);


    /**********************设置命令**********************/
    inline void setupFlxbFrame(Frame ID);
};

#endif // MAINWINDOW_H
class MainThread:QThread
{
public:
    explicit MainThread(MainWindow*w);
    virtual void run();
private:
    MainWindow *window;
};
